echo "[*] Fetching urls"

urls=($(curl -s "https://github.com/llvm/llvm-project/releases" -o - | grep -Po '(?<=href=")[^"]*' | grep "^/llvm/llvm-project/releases/download/" | grep "llvm-project-" | head -n 2 | sed "s|/llvm/|https://github.com/llvm/|"))
basenames=()
sources=()

# Build options
workdir=$HOME/llvm-release
llvm_path="/usr/local/llvm/bin"
projects="all"

for url in "${urls[@]}"
do
    name=$(basename "$url")
    basenames+=("$name")
    sources+=("$url")
done

[ ! -d $workdir ] && mkdir $workdir
pushd $workdir > /dev/null

echo "[*] Downloading ${#sources[@]} files"
sources_count=${#sources[@]}
for (( i=0; i<${sources_count}; i++ ));
do
    url="${sources[$i]}"
    output="${basenames[$i]}"

    if [ ! -f "$output" ]
    then
        echo "Downloading $output"
        curl -L $url -o $output
    fi
done


echo "[*] Checking integrity"

file="${basenames[0]}"
directory="${file%.*}"
directory="${directory%.*}"

gpg --verify "$file.sig" $file 2> /dev/null && echo "$file: OK" || exit 1

echo "[*] Compiling llvm-project"
tar -xvf $file
cd $directory

cmake -G "Ninja" -S llvm -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=$llvm_path/clang \
-DCMAKE_CXX_COMPILER=$llvm_path/clang++ -DLLVM_USE_LINKER=lld -DBUILD_SHARED_LIBS=OFF \
-DLLVM_ENABLE_PROJECTS=$projects -DLLVM_PARALLEL_LINK_JOBS=2 -DLLVM_ENABLE_LTO=Thin \
-DLLVM_BINUTILS_INCDIR=/usr/include -DLLVM_ENABLE_ZSTD=ON -DCMAKE_INSTALL_PREFIX=/usr/local/llvm

cd build
time ninja && time ninja check-all && doas ninja install
cd ..

popd > /dev/null
rm -rf $HOME/llvm-release

echo "[*] Done"
