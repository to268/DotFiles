echo "[*] Fetching urls"

urls=($(curl -s "https://github.com/llvm/llvm-project/releases" -o - | grep -Po '(?<=href=")[^"]*' | grep "^/llvm/llvm-project/releases/download/" | grep "llvm-project-" | head -n 2 | sed "s|/llvm/|https://github.com/llvm/|"))
projects="clang;clang-tools-extra;compiler-rt;mlir;lld;lldb;llvm"
basenames=()
sources=()
workdir=$HOME/llvm-release

for url in "${urls[@]}"
do
    name=$(basename "$url")
    basenames+=("$name")
    sources+=("$url")
done

[ ! -d $workdir ] && mkdir $workdir
pushd $workdir > /dev/null

echo "[*] Downloading ${#sources[@]} files"
sources_count=${#sources[@]}
for (( i=0; i<${sources_count}; i++ ));
do
    url="${sources[$i]}"
    output="${basenames[$i]}"

    if [ ! -f "$output" ]
    then
        echo "Downloading $output"
        curl -L $url -o $output
    fi
done


echo "[*] Checking integrity"

file="${basenames[0]}"
directory="${file%.*}"
directory="${directory%.*}"

gpg --verify "$file.sig" $file 2> /dev/null && echo "$file: OK" || exit 1

echo "[*] Compiling llvm-project"
tar -xvf $file
cd $directory

doas rm -rf /usr/local/llvm

cmake -G "Ninja" -S llvm -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Release \
-DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DLLVM_USE_LINKER=mold \
-DBUILD_SHARED_LIBS=ON -DLLVM_ENABLE_PROJECTS=$projects -DLLVM_PARALLEL_LINK_JOBS=2 \
-DCMAKE_INSTALL_PREFIX=/usr/local/llvm

cd build
time ninja
doas ninja install
cd ..

popd > /dev/null
rm -rf $HOME/llvm-release

echo "[*] Done"
